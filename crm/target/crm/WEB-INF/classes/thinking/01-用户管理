后台实现:
    整体思路:
        1.判断参数是否为空 (姓名、密码)
            如果为空，抛出异常
        2.通过用户名查询用户对象
        3.判断用户对象是否为空
            如果为空，用户不存在，抛出异常
        4.将前台传递的密码与数据库中查询的密码作比较(先将前合密码加密后，再比较)
            如果密码不相等，密码错误，抛出异常
        5.登录成功，返回成功的封装类（ResultInfo对象，将用户信息封装到UserModel中，设置封装类）
    分层思想:
    Controller层
        1.调用service层的方法，得到返回结果（使用try catch捕获异常)
        2.返回返回结果
    Service层
        1.判断参数是否为空 (姓名、密码)
            如果为空，抛出异常
        2.通过用户名查询用户对象
        3.判断用户对象是否为空
            如果为空，用户不存在，抛出异常
        4.将前台传递的密码与数据库中查询的密码作比较(先将前合密码加密后，再比较)
            如果密码不相等，密码错误，抛出异常
        5.登录成功，返回成功的封装类（ResultInfo对象，将用户信息封装到UserModel中，设置封装类）
    Dao层
        通过用户名查询用户对象，返回用户对象
修改密码：
    后台实现：
        1、从cookie中拿到用户id
        2、用户非空且用户对象存在（通过id查询用户对象）
        3、原始密码非空且与数据库中的密码一致
        4、新密码非空且不能与原始密码相同
        5、重复密码非空且与新密码保持一致
        6 执行修改密码操作，判断受影响的行数
